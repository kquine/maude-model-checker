
fmod NUMBERS is
  sort Number .
  op 0 : -> Number [ctor] .
  op s : -> Number [ctor] .
  op __ : Number Number -> Number [ctor comm assoc id: 0] .
endfm

mod COLLATZ is
  pr NUMBERS .

  sort Conf .
  op [_] : Number -> Conf .

  var N : Number .

  rl  [odd]: [N N s] => [N N N N N N s s s s] [narrowing] .	
  rl [even]: [N N]   => [N] [narrowing] .

---  rl  [odd]: [N N s] => [N N N s s] .	
---  eq [even]: [N N] = [N] .
endm

--- search [s s s s s] =>* [s] .
--- show search graph .

load symbolic-checker

(mod COLLATZ-CHECK is
  pr COLLATZ .
  pr SYMBOLIC-CHECKER .

  subsort Conf < State .

  vars N M : Number .

  ops one? even? : -> Prop [ctor] . 

  eq [s] |= one? = true [variant] .
  eq [0] |= one? = false [variant] .
  eq [s s N] |= one? = false [variant] .

  eq [0] |= even? = true [variant] .
  eq [N N] |= even? = true [variant] .
  eq [N N s] |= even? = false [variant] .
endm)

--- an inflating counterexample
(lfmc [s N] |= ([]<> ~ even?) -> (<> one?)  .)

--- it seems that discarding inflating counterexamples may not correct..
--- (otherwise, we trivially proved the Collatz conjecture!)


