
--- modified from "All about Maude," p390.

mod TOKEN-MUTEX is 
  sorts Number . 
  op 0 : -> Number [ctor] .
  op | : -> Number [ctor] .
  op __ : Number Number -> Number [ctor comm assoc id: 0] .

  sorts Token Mode ModeWait .
  subsorts ModeWait < Mode .
  op {_} : Number -> Token [ctor] . 
  op crit : -> Mode [ctor] . 
  op wait : -> ModeWait [ctor] . 

  sorts Proc ProcWait .
  subsort ProcWait < Proc .
  op [_,_] : Number Mode -> Proc [ctor] . 
  op [_,_] : Number ModeWait -> ProcWait [ctor] . 

  sort Conf ConfWait .
  subsort Proc < Conf . 
  subsorts Token ProcWait < ConfWait < Conf .
  op none : -> ConfWait [ctor] . 
  op __ : Conf Conf -> Conf [ctor comm assoc id: none] . 
  op __ : ConfWait ConfWait -> ConfWait [ctor ditto] . 

  sort Top .
  op <_,_> : Number Conf -> Top .

  vars N M : Number . var CF : Conf .

  rl [enter] : <   | N M,   {M} [M, wait] CF > 
            => <   | N M,       [M, crit] CF > . 
  rl [exit1] : < | | N M,       [M, crit] CF >
            => < | | N M, {| M} [M, wait] CF > . 
  rl [exit2] : <     | M,       [M, crit] CF >
            => <     | M,   {0} [M, wait] CF > . 
endm

load symbolic-checker

(mod TOKEN-MUTEX-SATISFACTION is
  pr TOKEN-MUTEX .
  pr SYMBOLIC-CHECKER .

  subsort Top < State .

  op ex? : -> Prop .

  vars N M M' : Number .  var CF : Conf .  var WF : ConfWait . 

  eq < N, WF > |= ex? = true [variant] .
  eq < N, WF [M,crit] > |= ex? = true [variant] .
  eq < N, CF [M,crit] [M',crit] > |= ex? = false [variant] .
endm)

(lfmc < | M N, {M} WF > |= [] ex? .)

